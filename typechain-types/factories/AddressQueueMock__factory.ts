/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AddressQueueMock,
  AddressQueueMockInterface,
} from "../AddressQueueMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isEmpty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peek",
    outputs: [
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peekLast",
    outputs: [
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610025600061002a60201b6101bc1760201c565b610056565b61003c8160000161003f60201b60201c565b50565b600181600101819055506000816002018190555050565b61073a806100656000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e46b688146100675780631f7b6d321461008557806359e02dd7146100a3578063681fe70c146100c15780638f807f6b146100df578063957908d1146100fb575b600080fd5b61006f610119565b60405161007c91906104c5565b60405180910390f35b61008d61012a565b60405161009a91906104f9565b60405180910390f35b6100ab61013b565b6040516100b891906104c5565b60405180910390f35b6100c961014c565b6040516100d6919061052f565b60405180910390f35b6100f960048036038101906100f4919061057b565b61015d565b005b610103610174565b60405161011091906104c5565b60405180910390f35b600061012560006101cb565b905090565b600061013660006101e3565b905090565b600061014760006101f8565b905090565b60006101586000610210565b905090565b61017181600061022590919063ffffffff16565b50565b6000610180600061024f565b90507f6de302039b20d4a635212cec2b3a2ded8d8375a7ecfb02d1ea3376ed2eb68773816040516101b191906104c5565b60405180910390a190565b6101c881600001610267565b50565b60006101d98260000161027e565b60001c9050919050565b60006101f1826000016102ec565b9050919050565b60006102068260000161032f565b60001c9050919050565b600061021e8260000161039d565b9050919050565b61024b826000018273ffffffffffffffffffffffffffffffffffffffff1660001b6103b1565b5050565b600061025d826000016103e5565b60001c9050919050565b600181600101819055506000816002018190555050565b60008161028a8161039d565b156102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c190610605565b60405180910390fd5b8260000160008460020154815260200190815260200160002054915050919050565b6000816001015482600201541015610307576000905061032a565b60018260010154836002015461031d9190610654565b6103279190610688565b90505b919050565b60008161033b8161039d565b1561037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037290610605565b60405180910390fd5b8260000160008460010154815260200190815260200160002054915050919050565b6000806103a9836102ec565b149050919050565b8082600001600084600201600081546103c9906106bc565b9190508190558152602001908152602001600020819055505050565b6000816103f18161039d565b15610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042890610605565b60405180910390fd5b82600001600084600101548152602001908152602001600020549150826000016000846001016000815480929190610468906106bc565b9190505581526020019081526020016000206000905550919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104af82610484565b9050919050565b6104bf816104a4565b82525050565b60006020820190506104da60008301846104b6565b92915050565b6000819050919050565b6104f3816104e0565b82525050565b600060208201905061050e60008301846104ea565b92915050565b60008115159050919050565b61052981610514565b82525050565b60006020820190506105446000830184610520565b92915050565b600080fd5b610558816104a4565b811461056357600080fd5b50565b6000813590506105758161054f565b92915050565b6000602082840312156105915761059061054a565b5b600061059f84828501610566565b91505092915050565b600082825260208201905092915050565b7f517565756520697320656d7074792e0000000000000000000000000000000000600082015250565b60006105ef600f836105a8565b91506105fa826105b9565b602082019050919050565b6000602082019050818103600083015261061e816105e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061065f826104e0565b915061066a836104e0565b925082820390508181111561068257610681610625565b5b92915050565b6000610693826104e0565b915061069e836104e0565b92508282019050808211156106b6576106b5610625565b5b92915050565b60006106c7826104e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106f9576106f8610625565b5b60018201905091905056fea2646970667358221220600af8a77f97521cfb2d6497b5ce517dbf455b08e457c75dcb3f739b928d644164736f6c63430008100033";

type AddressQueueMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressQueueMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressQueueMock__factory extends ContractFactory {
  constructor(...args: AddressQueueMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressQueueMock> {
    return super.deploy(overrides || {}) as Promise<AddressQueueMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressQueueMock {
    return super.attach(address) as AddressQueueMock;
  }
  override connect(signer: Signer): AddressQueueMock__factory {
    return super.connect(signer) as AddressQueueMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressQueueMockInterface {
    return new utils.Interface(_abi) as AddressQueueMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressQueueMock {
    return new Contract(address, _abi, signerOrProvider) as AddressQueueMock;
  }
}
